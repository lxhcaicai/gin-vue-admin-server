definitions:
  config.Autocode:
    properties:
      root:
        type: string
    type: object
  config.Captcha:
    properties:
      img-height:
        description: 验证码高度
        type: integer
      img-width:
        description: 验证码宽度
        type: integer
      key-long:
        description: 验证码长度
        type: integer
      open-captcha:
        type: integer
      open-captcha-timeout:
        description: 防爆破验证码超时时间，单位：s(秒)
        type: integer
    type: object
  config.JWT:
    properties:
      buffer-time:
        description: 缓冲时间
        type: string
      expires-time:
        description: 过期时间
        type: string
      issuer:
        description: 签发者
        type: string
      signing-key:
        description: jwt签名
        type: string
    type: object
  config.Mysql:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        type: string
      port:
        type: string
      prefix:
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      username:
        description: 数据库密码
        type: string
    type: object
  config.Redis:
    properties:
      addr:
        description: 服务器地址:端口
        type: string
      db:
        description: redis的哪个数据库
        type: integer
      password:
        description: 密码
        type: string
    type: object
  config.Server:
    properties:
      autocode:
        $ref: '#/definitions/config.Autocode'
      captcha:
        $ref: '#/definitions/config.Captcha'
      db-list:
        items:
          $ref: '#/definitions/config.SpecializedDB'
        type: array
      jwt:
        $ref: '#/definitions/config.JWT'
      mysql:
        allOf:
        - $ref: '#/definitions/config.Mysql'
        description: gorm
      redis:
        $ref: '#/definitions/config.Redis'
      system:
        $ref: '#/definitions/config.System'
      zap:
        $ref: '#/definitions/config.Zap'
    type: object
  config.SpecializedDB:
    properties:
      alias-name:
        type: string
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      disable:
        type: boolean
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        type: string
      port:
        type: string
      prefix:
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      type:
        type: string
      username:
        description: 数据库密码
        type: string
    type: object
  config.System:
    properties:
      addr:
        description: 端口值
        type: integer
      db-type:
        description: 数据库类型:mysql(默认)|sqlite|sqlserver|postgresql
        type: string
      router-prefix:
        type: string
      use-multipoint:
        description: 多点登录拦截
        type: boolean
      use-redis:
        description: 使用redis
        type: boolean
    type: object
  config.Zap:
    properties:
      director:
        description: 日志文件夹
        type: string
      encode-level:
        description: 编码级
        type: string
      format:
        description: 输出
        type: string
      level:
        description: 级别
        type: string
      log-in-console:
        description: 输出控制台
        type: boolean
      prefix:
        description: 日志前缀
        type: string
      show-line:
        description: 显示行
        type: boolean
      stacktrace-key:
        description: 栈名
        type: string
    type: object
  request.ChangePasswordReq:
    properties:
      newPassword:
        description: 新密码
        type: string
      password:
        description: 密码
        type: string
    type: object
  request.InitDB:
    properties:
      dbName:
        description: 数据库名
        type: string
      dbPath:
        description: sqlite数据库文件路径
        type: string
      dbType:
        description: 数据库类型
        type: string
      host:
        description: 服务器地址
        type: string
      password:
        description: 数据库密码
        type: string
      port:
        description: 数据库连接端口
        type: string
      userName:
        description: 数据库用户名
        type: string
    required:
    - dbName
    type: object
  request.Login:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaId:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        type: string
    type: object
  request.PageInfo:
    properties:
      keyword:
        description: 关键字
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  request.Register:
    properties:
      authorityId:
        example: int 角色id
        type: string
      authorityIds:
        example: '[]uint 角色id'
        type: string
      email:
        example: 电子邮箱
        type: string
      enable:
        example: int 是否启用
        type: string
      headerImg:
        example: 头像链接
        type: string
      nickName:
        example: 昵称
        type: string
      passWord:
        example: 密码
        type: string
      phone:
        example: 电话号码
        type: string
      userName:
        example: 用户名
        type: string
    type: object
  response.LoginResponse:
    properties:
      expiresAt:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
    type: object
  response.PageResult:
    properties:
      list: {}
      page:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      string:
        type: string
    type: object
  response.SysCaptchaResponse:
    properties:
      captchaId:
        type: string
      captchaLength:
        type: integer
      openCaptcha:
        type: boolean
      picPath:
        type: string
    type: object
  response.SysConfigResponse:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
  response.SysUserResponse:
    properties:
      user:
        $ref: '#/definitions/system.SysUser'
    type: object
  system.SysAuthority:
    properties:
      authorityId:
        description: 角色ID
        type: integer
      authorityName:
        description: 角色名
        type: string
      children:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      createdAt:
        description: 创建时间
        type: string
      dataAuthorityId:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      defaultRouter:
        description: 默认菜单(默认dashboard)
        type: string
      deletedAt:
        type: string
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      parentId:
        description: 父角色ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenu:
    type: object
  system.SysUser:
    properties:
      ID:
        description: 主键ID
        type: integer
      activeColor:
        description: 活跃颜色
        type: string
      authorities:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      authority:
        $ref: '#/definitions/system.SysAuthority'
      authorityId:
        description: 用户角色ID
        type: integer
      baseColor:
        description: 基础颜色
        type: string
      createdAt:
        description: 创建时间
        type: string
      email:
        description: 用户邮箱
        type: string
      enable:
        description: 用户是否被冻结 1正常 2冻结
        type: integer
      headerImg:
        description: 用户头像
        type: string
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 用户手机号
        type: string
      sideMode:
        description: 用户侧边主题
        type: string
      updatedAt:
        description: 更新时间
        type: string
      userName:
        description: 用户登录名
        type: string
      uuid:
        description: "用户UUID \t// 用户UUID"
        type: string
    type: object
  system.System:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
info:
  contact: {}
paths:
  /base/captcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 生成验证码,返回包括随机数id,base64,验证码长度,是否开启验证码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysCaptchaResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 生成验证码
      tags:
      - Base
  /base/login:
    post:
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: 返回包括用户信息,token,过期时间
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.LoginResponse'
                msg:
                  type: string
              type: object
      summary: 用户登录
      tags:
      - Base
  /init/checkdb:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 初始化用户数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      summary: 初始化用户数据库
      tags:
      - CheckDB
  /init/initdb:
    post:
      parameters:
      - description: 初始化数据库参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.InitDB'
      produces:
      - application/json
      responses:
        "200":
          description: 初始化用户数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 初始化用户数据库
      tags:
      - InitDB
  /system/getServerInfo:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 获取服务器信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取服务器信息
      tags:
      - System
  /system/getSystemConfig:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 获取配置文件内容,返回包括系统配置
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysConfigResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取配置文件内容
      tags:
      - System
  /system/reloadSystem:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 重启系统
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 重启系统
      tags:
      - System
  /system/setSystemConfig:
    post:
      parameters:
      - description: 设置配置文件内容
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.System'
      produces:
      - application/json
      responses:
        "200":
          description: 设置配置文件内容
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置配置文件内容
      tags:
      - System
  /user/SetSelfInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
  /user/admin_register:
    post:
      parameters:
      - description: 用户名, 昵称, 密码, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: 用户注册账号,返回包括用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysUserResponse'
                msg:
                  type: string
              type: object
      summary: 用户注册账号
      tags:
      - SysUser
  /user/changePassword:
    post:
      parameters:
      - description: 用户名, 原密码, 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: 用户修改密码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - SysUser
  /user/getUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - SysUser
  /user/getUserList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取用户列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
